#!/usr/local/bin/fish

source ~/git/fish-functions/src/utils.fish

set -x test_json '{"repository":{"name":"fish-functions","clone_url":"https://github.com/kimh/fish-functions.git"}}'

### Global variables
set -x data_dir ./data

echo "zoku started"

function build
	set json         $argv[-1]
	set repo_name    (echo $json | jq -r '.repository.name')
	set clone_url    (echo $json | jq -r '.repository.clone_url')
	set project_dir  $data_dir/$repo_name
	set builds_dir   $project_dir/builds; and mkdir -p $builds_dir
	set build_num    (next_build_dir $builds_dir)
	set build_dir    $builds_dir/$build_num

	echo "Buidling $repo_name started..."

	pushd $build_dir; run_build; set result $status; popd

	if test $result -ne 0
		echo "Test failed with exit status: $result"
	else
		echo "Test passed"
	end

	echo "Buidling $repo_name finished!!"
end

function run_build
	docker run -e \
	       "clone_url=https://github.com/kimh/fish-functions.git" \
               builder fish -c ' \
	       # Need to join the protocol and repo url because fish automatically \
	       # coverted colon-delimitted string into array. \
	       # See: https://github.com/fish-shell/fish-shell/issues/1374 \
               set clone_url "$clone_url[1]:$clone_url[2]";
               git clone $clone_url; and cd fish-functions;
 	       . zoku.fish;
	       main;
	       ' > out.log
end

function next_build_dir
	set builds_dir $argv[1]

	if is_dir_empty $builds_dir
		set newest_build_num 0
	else
		set newest_build_num (ls $builds_dir)[-1]
	end

	echo (math $newest_build_num + 1)
end

#while true
#	sleep 3
	#set github_webhook_json (echo -e 'HTTP/1.1 200 OK\r\n' | nc -l 4567)
	set github_webhook_json $test_json
	set logfile 

	build $github_webhook_json 
#end


